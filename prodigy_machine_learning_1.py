# -*- coding: utf-8 -*-
"""Prodigy_Machine Learning_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GO47alALqL-2C2nYxQChKlFXYGJmEbEW
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import explained_variance_score

hf= pd.read_csv('/content/Housing (1).csv')
print(hf)

hf.head()

hf.shape

hf.info()

hf.describe()

hf.isnull().sum()*100/hf.shape[0]

hf.columns

x= hf[['area', 'bedrooms', 'bathrooms', 'stories', 'mainroad',
       'guestroom', 'basement', 'hotwaterheating', 'airconditioning',
       'parking', 'prefarea', 'furnishingstatus']]
y= hf['price']

plt.xlabel('area')
plt.ylabel('price')
plt.scatter(hf.area,hf.price,color='Red',marker='.')

for value in hf:
    print('For {},{} unique values present'.format(value,hf[value].nunique()))

hf = hf.drop(['mainroad','guestroom','basement','hotwaterheating','airconditioning','prefarea','furnishingstatus'],axis=1)
hf

hf.head()

X = hf.iloc[:,1:].values
y = hf.iloc[:,0].values

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)

mlr = LinearRegression()
mlr.fit(X_train,y_train)
mlr_score = mlr.score(X_test,y_test)
pred_mlr = mlr.predict(X_test)
expl_mlr = explained_variance_score(pred_mlr,y_test)

print("Multiple Linear Regression Model Score is ",round(mlr.score(X_test,y_test)*100))